---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth/login":
    parameters:
      - name: email
        in: query
        description: email
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: password
        required: true
        schema:
          type: string
    post:
      summary: authenticate authentication
      responses:
        "200":
          description: successful
  "/todos/{todo_id}/items":
    parameters:
      - name: todo_id
        in: path
        description: todo_id
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: name
        schema:
          type: string
      - name: done
        in: query
        description: done
        schema:
          type: boolean
    get:
      summary: list items
      responses:
        "200":
          description: successful
      security:
        - api_key: []
    post:
      summary: create item
      responses:
        "200":
          description: successful
      security:
        - api_key: []
  "/todos/{todo_id}/items/{id}":
    parameters:
      - name: todo_id
        in: path
        description: todo_id
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: id
        schema:
          type: string
      - name: name
        in: query
        description: name
        schema:
          type: string
      - name: done
        in: query
        description: done
        schema:
          type: boolean
    get:
      summary: show item
      responses:
        "200":
          description: successful
      security:
        - api_key: []

    put:
      summary: update item
      responses:
        "200":
          description: successful
      security:
        - api_key: []
    delete:
      summary: delete item
      responses:
        "200":
          description: successful
      security:
        - api_key: []
  "/logout":
    post:
      summary: logout session
      responses:
        "200":
          description: successful
      security:
        - api_key: []
  "/todos":
    parameters:
      - name: title
        in: query
        description: title
        schema:
          type: string
    get:
      summary: list todos
      responses:
        "200":
          description: successful
      security:
        - api_key: []
    post:
      summary: create todo
      responses:
        "200":
          description: successful
      security:
        - api_key: []
  "/todos/{id}":
    parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      - name: title
        in: query
        description: title
        required: true
        schema:
          type: string
    get:
      summary: show todo
      responses:
        "200":
          description: successful
      security:
        - api_key: []
    put:
      summary: update todo
      responses:
        "200":
          description: successful
      security:
        - api_key: []
    delete:
      summary: delete todo
      responses:
        "200":
          description: successful
      security:
        - api_key: []
  "/signup":
    parameters:
      - name: email
        in: query
        description: email
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: name
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: password
        required: true
        schema:
          type: string
      - name: password_confirmation
        in: query
        description: password_confirmation
        required: true
        schema:
          type: string
    post:
      summary: create user
      responses:
        "200":
          description: successful
servers:
  - url: http://{defaultHost}
    variables:
      defaultHost:
        default: 127.0.0.1:3000
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
